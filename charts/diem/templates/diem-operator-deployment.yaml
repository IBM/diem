kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.operator.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.operator.name }}
    tier: {{ .Values.operator.tier }}
    version: {{ .Values.operator.version }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version}}"
  annotations:
    {{- if .Values.controller.podAnnotations }}
    {{- with .Values.controller.podAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- end }}
spec:
  replicas: {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.operator.name }}
      tier: {{ .Values.operator.tier }}
  template:
    metadata:
      name: {{ .Values.operator.name }}
      labels:
        app: {{ .Values.operator.name }}
        tier: {{ .Values.operator.tier }}
    spec:
      {{- if .Values.operator.serviceAccountName }}
      serviceAccountName: {{ .Values.operator.serviceAccountName }}
      {{- end }}
      containers:
        - name: {{ .Values.operator.name }}
          image: {{ .Values.operator.image }}:{{ .Values.operator.version }}
          envFrom:
            - configMapRef:
                name: {{ .Values.common.name }}-config
            - configMapRef:
                name: {{ .Values.operator.name }}-config
            - secretRef:
                name: {{ .Values.common.name }}-secret
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            privileged: false
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "15"]
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
